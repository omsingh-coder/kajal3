<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>You Complete Me - Page 8</title>
  <style>
    body {
      margin: 0;
      background: #000;
      overflow: hidden;
      font-family: 'Segoe UI', sans-serif;
      display: flex;
      align-items: center;
      justify-content: center;
      flex-direction: column;
      height: 100vh;
      color: white;
    }

    h1 {
      font-size: 2rem;
      text-align: center;
      margin-top: 50px;
      background: linear-gradient(90deg, #ff5f6d, #ffc371);
      -webkit-background-clip: text;
      -webkit-text-fill-color: transparent;
      animation: fadeIn 3s ease-in-out forwards;
    }

    @keyframes fadeIn {
      from { opacity: 0; transform: translateY(20px); }
      to { opacity: 1; transform: translateY(0); }
    }

    #nextBtn {
      margin-top: 40px;
      padding: 12px 28px;
      font-size: 18px;
      background-color: #ff4081;
      color: white;
      border: none;
      border-radius: 30px;
      cursor: pointer;
      animation: fadeIn 5s ease-in-out forwards;
    }

    #nextBtn:hover {
      background-color: #e91e63;
    }

    canvas {
      position: absolute;
      top: 0;
      left: 0;
      z-index: -1;
    }
  </style>
</head>
<body>
  <canvas id="heartCanvas"></canvas>

  <h1>I never believed in destinyâ€¦<br> until I met you ðŸ’—</h1>
  <button id="nextBtn" onclick="goNext()">Next</button>

  <script>
    function goNext() {
      window.location.href = "page9.html";
    }

    // Heart particle animation
    const canvas = document.getElementById('heartCanvas');
    const ctx = canvas.getContext('2d');
    canvas.width = window.innerWidth;
    canvas.height = window.innerHeight;

    const hearts = [];

    function Heart() {
      this.x = Math.random() * canvas.width;
      this.y = canvas.height + Math.random() * 100;
      this.size = Math.random() * 4 + 2;
      this.speed = Math.random() * 1 + 0.5;
      this.opacity = Math.random() * 0.5 + 0.5;
      this.color = rgba(255, 105, 180, ${this.opacity});
    }

    Heart.prototype.update = function () {
      this.y -= this.speed;
      if (this.y < -10) {
        this.y = canvas.height + Math.random() * 100;
        this.x = Math.random() * canvas.width;
      }
    };

    Heart.prototype.draw = function () {
      ctx.beginPath();
      ctx.moveTo(this.x, this.y);
      ctx.bezierCurveTo(this.x + this.size, this.y - this.size,
                        this.x + this.size * 2, this.y + this.size,
                        this.x, this.y + this.size * 2);
      ctx.bezierCurveTo(this.x - this.size * 2, this.y + this.size,
                        this.x - this.size, this.y - this.size,
                        this.x, this.y);
      ctx.fillStyle = this.color;
      ctx.fill();
    };

    function init() {
      for (let i = 0; i < 100; i++) {
        hearts.push(new Heart());
      }
    }

    function animate() {
      ctx.clearRect(0, 0, canvas.width, canvas.height);
      hearts.forEach((heart) => {
        heart.update();
        heart.draw();
      });
      requestAnimationFrame(animate);
    }

    init();
    animate();
    window.addEventListener('resize', () => {
      canvas.width = window.innerWidth;
      canvas.height = window.innerHeight;
    });
  </script>
</body>
</html>
